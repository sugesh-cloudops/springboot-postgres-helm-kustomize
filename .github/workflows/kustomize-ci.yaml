# name: Kustomize CI - Build and Push

# on:
#   push:
#     branches:
#       - feature/development
#       - development

# concurrency:
#   group: kustomize-update
#   cancel-in-progress: true

# jobs:
#   build-and-push:
#     name: Build and Push Docker Image
#     runs-on: ubuntu-latest

#     outputs:
#       image-tag: ${{ steps.set-tag.outputs.tag }}

#     env:
#       IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/springboot-postgres

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'temurin'
#           java-version: '17'

#       - name: Build Spring Boot App
#         working-directory: ./app
#         run: ./mvnw clean package -DskipTests

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to DockerHub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Set image tag
#         id: set-tag
#         run: |
#           COMMIT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
#           BRANCH=$(echo "${GITHUB_REF#refs/heads/}" | tr '/' '-')
#           TAG="${BRANCH}-${COMMIT_SHA}"
#           echo "tag=$TAG" >> "$GITHUB_OUTPUT"

#       - name: Build and push Docker image
#         run: |
#           docker build -t $IMAGE_NAME:${{ steps.set-tag.outputs.tag }} ./app
#           docker push $IMAGE_NAME:${{ steps.set-tag.outputs.tag }}

#   update-kustomize:
#     name: Update Kustomize Overlay
#     needs: build-and-push
#     runs-on: ubuntu-latest

#     env:
#       IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/springboot-postgres
#       IMAGE_TAG: ${{ needs.build-and-push.outputs.image-tag }}

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Configure git
#         run: |
#           git config --global user.name "${{ secrets.GIT_USER_NAME }}"
#           git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"

#       - name: Update image tag and push to branch
#         run: |
#           FILE="kustomize/overlays/dev/patch-deployment-image.yaml"

#           echo "Updating $FILE with image: $IMAGE_NAME:$IMAGE_TAG"

#           sed -i.bak -E "s|image:.*|image: ${IMAGE_NAME}:${IMAGE_TAG}|" "$FILE"

#           git checkout -B auto/kustomize-update
#           git add "$FILE"
#           git commit -m "Update image tag to $IMAGE_TAG" || echo "No changes to commit"

#           git push origin auto/kustomize-update --force


 